@import "syntax-variables";

body {
   background: @background-color;
   color: @syntax-plain-text-color;
}

// atom-workspace {
//    font-family: 'Ubuntu', 'Roboto', 'Helvetica', 'Arial', sans-serif;
//    background-color: @background-color;
//    color: rgba(255, 255, 255, 0.8);
// }

atom-text-editor, :host {
   background-color: @background-color;
   color: @syntax-plain-text-color;

   .wrap-guide {
      background-color: @syntax-wrap-guide-color;
   }

   .indent-guide {
      color: @syntax-indent-guide-color;
      box-shadow: inset 2px 0;
   }

   .invisible-character {
      color: @syntax-invisible-character-color;
   }

   .gutter {
      background: transparent;
      color: @syntax-gutter-text-color;
      .line-number {
         &.cursor-line {
            background-color: @syntax-gutter-background-color-selected;
            color: @syntax-gutter-text-color-selected;
         }

         &.cursor-line-no-selection {
            color: @syntax-gutter-text-color-selected;
         }
      }
   }

   .gutter .line-number.folded,
   .gutter .line-number:after,
   .fold-marker:after {
      color: @white;
   }

   .invisible {
      color: @syntax-text-color;
   }

   .cursor {
      color: @syntax-cursor-color;
   }

   .selection .region {
      background-color: @syntax-selection-color;
   }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
   background-color: transparent;
   border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
   border: 1px solid @syntax-result-marker-color-selected;
}

.comment {
   color: @syntax-comment-color;
}

.keyword {
   &.control {
      color: @syntax-keyword-color;
   }
   &.control.import {
      color: @syntax-function-color;
   }
   &.comparison {
      color: @syntax-plain-text-color;
   }
   &.operator {
      color: @syntax-plain-text-color;
   }
   &.other.special-method {
      color: @syntax-plain-text-color;
   }
   &.other.unit {
      color: @syntax-css-unit-value-color;
   }
   &.new {
      color: @syntax-function-color;
      font-weight: bold;
   }
}

.storage {
   color: @syntax-storage-color;
}

.constant {
   color: @syntax-css-unit-value-color;

   &.character.escape {
      // color: @cyan;
   }

   &.numeric {
      color: @syntax-css-unit-value-color;
   }

   &.other.color {
      // color: @cyan;
   }

   &.other.symbol {
      // color: @green;
   }
}

.variable {
   color: @syntax-variable-color;
   &.property {
      color: @syntax-css-property-value-color;
   }
   &.parameter {
      color: @syntax-plain-text-color;
   }
}

.invalid.illegal {
   // background-color: @red;
   // color: @syntax-background-color;
}

.string {
   color: @syntax-string-color;

   // &.regexp {
   //    color: @cyan;
   //
   //    .source.ruby.embedded {
   //       color: @orange;
   //    }
   // }
   //
   // &.other.link {
   //    color: @red;
   // }
}
.string.definition {
   color: @syntax-plain-text-color;
}
.punctuation {
   &.definition {
      &.comment {
         color: @syntax-comment-color;
      }
      //
      // &.string,
      // &.variable,
      // &.parameters,
      // &.array {
      //    color: @syntax-plain-text-color;
      // }

      &.heading,
      &.identity {
         // color: @blue;
      }

      &.bold {
         // color: @light-orange;
         font-weight: bold;
      }

      &.italic {
         // color: @purple;
         font-style: italic;
      }
   }

   &.section.embedded {
      // color: darken(@red, 10%);
   }

}

.support {
   &.class {
      color: @syntax-variable-color;
   }
}

.entity {
   &.instance {
      color: @syntax-function-color;
      font-weight: bold;
   }
   &.name.type {
      // color: @light-orange;
   }

   &.other.inherited-class {
      // color: @green;
   }
   &.name.class, &.name.type.class {
      // color: @light-orange;
   }

   &.name.section {
      // color: @blue;
   }

   // &.name.tag {
   //    color: @red;
   // }
}

.meta {
   &.class {
      // color: @light-orange;
   }

   &.link {
      // color: @orange;
   }

   &.require {
      // color: @blue;
   }

   &.selector {
      // color: @purple;
   }

   &.separator {
      // background-color: @gray;
      // color: @syntax-text-color;
   }
}

.none {
   color: @syntax-text-color;
}

.markup {
   &.bold {
      color: @orange;
      font-weight: bold;
   }

   &.changed {
      color: @purple;
   }

   &.deleted {
      color: @red;
   }

   &.italic {
      color: @purple;
      font-style: italic;
   }

   &.heading .punctuation.definition.heading {
      color: @blue;
   }

   &.inserted {
      color: @green;
   }

   &.list {
      color: @red;
   }

   &.quote {
      color: @orange;
   }

   &.raw.inline {
      color: @green;
   }
}

.source.gfm .markup {
   -webkit-font-smoothing: auto;
   &.heading {
      // color: @green;
   }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
   padding-left: 1px;
}

// Manual added
.source {
   // color: @white;
}
.type.function,
.support.function,
.entity.function,
.keyword.control.import.include.php,
.class.php {
   color: @syntax-function-color;
   font-weight: bold;
}
.attribute-name,
.entity.name.tag.reference {
   color: @syntax-css-attribute-name-color;
}
.property-list, .reference,
.entity.reference {
   color: @syntax-css-attribute-name-color;
}
.property-name {
   color: @syntax-css-property-name-color;
}
.property-value > .constant {
   color: @syntax-css-property-value-color;
}
.placeholder {
   color: @syntax-variable-color;
}
.method-call > .function-call > .arguments {
   color: @syntax-object-key-color;
}
.method-call > .arguments {
   // color: @syntax-plain-text-color;
}
.function-call > .arguments {
   color: @syntax-object-key-color;
}
.at-rule.control {
   font-weight: bold;
}
.bracket,
.curly,
.comma,
.brace,
.terminator,
.period,
.separator,
.dictionary,
.delimiter {
   color: @syntax-plain-text-color;
}
.cursor-line {
   background-color: darken(@background-color, 3%);
}
atom-text-editor::shadow .source.json .meta.structure.dictionary.json > .value.json > .string.json,
atom-text-editor::shadow .source.json .meta.structure.dictionary.json > .value.json > .array.json > .string.json {
   color: @syntax-object-value-color;
}
atom-text-editor::shadow .source.json .meta.structure.dictionary.json > .string.quoted.json {
   color: @syntax-object-key-color;
}
.tag {
   color: @syntax-plain-text-color;
}
.tag.definition {
   color: @syntax-html-tag-color;
}
.tag.name,
.attribute-name.html, atom-text-editor .entity.name.tag.block.any.html.angular, atom-text-editor::shadow .entity.name.tag.block.any.html.angular, atom-text-editor .entity.other.attribute-name.html.angular, atom-text-editor::shadow .entity.other.attribute-name.html.angular {
   color: @syntax-html-tag-color;
}
.attribute-name.html,
atom-text-editor .entity.name.tag.block.any.html.angular, atom-text-editor::shadow .entity.name.tag.block.any.html.angular, atom-text-editor .entity.other.attribute-name.html.angular, atom-text-editor::shadow .entity.other.attribute-name.html.angular {
   color: @syntax-css-property-name-color;
}
.tag.template.angular {
   color: lighten(@purple, 10%);
}
.punctuation.block.angular.angular.angular.angular.angular.angular.angular.angular.angular.angular.angular.angular.angular.angular.angular {
   color: @syntax-plain-text-color;
}
.punctuation.section.embedded.end.php,
.punctuation.section.embedded.begin.php {
   color: lighten(@background-color, 15%);
   font-weight: bold;
}
.text {
   color: rgb(255, 255, 255);
}
.list-tree {
   font-family: Ubuntu condensed;
   font-weight: bold;
}
.tab-bar .tab {
   font-family: Ubuntu condensed;
   font-weight: bold;
}
